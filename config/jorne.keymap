/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <6>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
    chosen {
		zmk,underglow = &led_strip;
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp LCTRL  &lt ADJ ESC         &kp Q &kp W &kp E &kp R &kp T      &kp Y  &kp U  &kp I  &kp O   &kp P    &kp DEL &lt ADJ ENTER
             &mt LCTRL TAB      &kp A &kp S &kp D &kp F &kp G         &kp H  &kp J  &kp K  &kp L   &kp SEMI &kp ENTER
             &mt LSHFT CLCK      &kp Z &kp X &kp C &kp V &kp B     &kp B  &kp N  &kp M  &kp COMMA &kp DOT &mt RSHIFT SLASH
                         &mt LALT LEFT &mt LGUI DOWN &kp SPACE             &lt LWR SPACE &mt RGUI UP &lt RSE RIGHT
                        >;
                };
                lower_layer {
                        bindings = <
   &kp LCTRL  &kp MINUS &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS &kp STAR &kp MINUS &kp PLUS &kp BSLH    &kp ENTER    
	      &none     &kp N1   &kp N2 &kp N3   &kp N4   &kp N5           &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &kp ENTER
              &kp LSHIFT    &none   &none &none   &none   &none           &none    &kp LPAR   &kp RPAR   &kp COMMA &kp DOT  &kp SLASH
                                    &kp LALT &kp LGUI &kp SPACE          &none &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PGUP|LBKT|RBKT |BSLH |    |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | END|  PGDN |    | SQT | ENTER |
//       | SHIFT |  0  |  1  |  2  |  3  |  .  |   | VOLD| DEL | INS|   |     |     |
//                          | ALT | GUI | SPACE |   | SPACE |     |     |
                        bindings = <
   &bootloader &kp KP_NUM      &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &kp C_VOL_UP &kp HOME &kp PSCRN &kp PG_UP &kp SLCK &kp CAPS &bootloader
          &mt LCTRL EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &kp C_MUTE   &kp LEFT &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &trans          &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &kp C_VOL_DN &kp END  &kp DOWN  &kp PG_DN &kp PAUSE_BREAK &trans
                                                           &trans &trans &lt ADJ RET        &lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST |      | F1  | F2  | F3  | F4  | F5  |   |  F6 |  F7 | F8  |  F9 | F10 |     | RST |
//       | BLDR| F11 | F12 |     |     |     |   |     | LFT |  DN |  UP | RGT | BLDR|
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//                          |     | RGB |     |   |     | OUT |     |
                        bindings = <
   &reset &none  &kp F1  &kp F2   &kp F3   &kp F4    &kp F5    &kp F6    &kp F7     &kp F8  &kp F9      &kp F10   &reset   &none 
          &none   &kp F11 &kp F12 &none &none &none       &none &kp LEFT &kp DOWN &kp UP &kp RIGHT  &none
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4              &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
                                                                    &trans &rgb_ug RGB_TOG &trans   &trans &out OUT_TOG &trans
                        >;
                };
        };
};
